{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manna\\\\OneDrive\\\\Desktop\\\\rankinsight\\\\client\\\\src\\\\components\\\\RankForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './RankForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst indianStates = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"];\nconst coursesList = [\"Aerospace Engineering (4 Years, Bachelor of Technology)\", \"Aerospace Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Artificial Intelligence (4 Years, Bachelor of Technology)\", \"Artificial Intelligence and Data Analytics (4 Years, Bachelor of Technology)\", \"Artificial Intelligence and Data Engineering (4 Years, Bachelor of Technology)\", \"Biochemical Engineering with M.Tech. in Biochemical Engineering and Biotechnology (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Bioengineering with M.Tech in Biomedical Technology (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Biological Engineering (4 Years, Bachelor of Technology)\", \"Biological Science (4 Years, Bachelor of Science)\", \"Biotechnology and Biochemical Engineering (4 Years, Bachelor of Technology)\", \"Biotechnology and Bioinformatics (4 Years, Bachelor of Technology)\", \"Chemical Engineering (4 Years, Bachelor of Technology)\", \"Chemical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Chemical Science and Technology (4 Years, Bachelor of Technology)\", \"Ceramic Engineering (4 Years, Bachelor of Technology)\", \"Ceramic Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Civil Engineering (4 Years, Bachelor of Technology)\", \"Civil Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Computer Science and Engineering (4 Years, Bachelor of Technology)\", \"Computer Science and Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Data Science and Artificial Intelligence (4 Years, Bachelor of Technology)\", \"Data Science and Engineering (4 Years, Bachelor of Technology)\", \"Electrical Engineering (4 Years, Bachelor of Technology)\", \"Electrical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Electronics and Communication Engineering (4 Years, Bachelor of Technology)\", \"Electronics and Electrical Engineering (4 Years, Bachelor of Technology)\", \"Engineering Design (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Engineering Physics (4 Years, Bachelor of Technology)\", \"Environmental Engineering (4 Years, Bachelor of Technology)\", \"Environmental Science and Engineering (4 Years, Bachelor of Technology)\", \"Industrial Chemistry (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Materials Science and Technology (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Mathematics and Computing (4 Years, Bachelor of Technology)\", \"Mathematics and Computing (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Mechanical Engineering (4 Years, Bachelor of Technology)\", \"Mechanical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\", \"Metallurgical and Materials Engineering (4 Years, Bachelor of Technology)\", \"Mining Engineering (4 Years, Bachelor of Technology)\", \"Mining Machinery Engineering (4 Years, Bachelor of Technology)\", \"Naval Architecture and Ocean Engineering (4 Years, Bachelor of Technology)\", \"Physics (4 Years, Bachelor of Science)\", \"Physics (5 Years, Bachelor of Science and Master of Science (Dual Degree))\", \"Production and Industrial Engineering (4 Years, Bachelor of Technology)\", \"Statistics and Data Science (4 Years, Bachelor of Science)\", \"Space Sciences and Engineering (4 Years, Bachelor of Technology)\", \"Textile Technology (4 Years, Bachelor of Technology)\", \"Geological Technology (5 Years, Integrated Master of Technology)\", \"Geophysical Technology (5 Years, Integrated Master of Technology)\", \"Applied Geology (5 Years, Integrated Master of Technology)\", \"Applied Geophysics (5 Years, Integrated Master of Technology)\", \"Chemical and Biochemical Engineering (4 Years, Bachelor of Technology)\", \"Pharmaceutical Engineering & Technology (4 Years, Bachelor of Technology)\", \"Interdisciplinary Sciences (5 Years, Bachelor of Science and Master of Science (Dual Degree))\", \"Biomedical Engineering (4 Years, Bachelor of Technology)\", \"Bio Engineering (4 Years, Bachelor of Technology)\", \"Energy Engineering (4 Years, Bachelor of Technology)\", \"Industrial Engineering and Operations Research (4 Years, Bachelor of Technology)\", \"Mechatronics Engineering (4 Years, Bachelor of Technology)\", \"Chemical Science and Technology (4 Years, Bachelor of Technology)\", \"Mathematics & Computing (5 Years, Bachelor of Science and Master of Science (Dual Degree))\", \"Biosciences and Bioengineering (4 Years, Bachelor of Technology)\", \"Chemical Sciences (5 Years, Bachelor of Science and Master of Science (Dual Degree))\", \"Engineering and Computational Mechanics (4 Years, Bachelor of Technology)\"];\nconst RankForm = () => {\n  _s();\n  const [examType, setExamType] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [colleges, setColleges] = useState([]);\n  const fetchColleges = async e => {\n    e.preventDefault();\n    if (!gender || !category || !rank || selectedCourses.length === 0) {\n      alert(\"Please select all fields and at least one course.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/api/colleges/search`, {\n        params: {\n          gender,\n          category,\n          rank: Number(rank),\n          courses: selectedCourses.join(\",\")\n        }\n      });\n      setColleges(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error fetching data:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to fetch data. Please try again.\");\n    }\n  };\n  const handleCourseChange = e => {\n    const value = e.target.value;\n    if (selectedCourses.includes(value)) {\n      setSelectedCourses(selectedCourses.filter(course => course !== value));\n    } else if (selectedCourses.length < 3) {\n      setSelectedCourses([...selectedCourses, value]);\n    } else {\n      alert(\"You can select a maximum of 3 courses.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Your College\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchColleges,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Exam Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: examType,\n        onChange: e => setExamType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"jeeAdvanced\",\n          children: \"JEE Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"GENDER_NEUTRAL\",\n          children: \"Gender-Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FEMALE_ONLY\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"OPEN\",\n          children: \"OPEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EWS\",\n          children: \"EWS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"OBC-NCL\",\n          children: \"OBC-NCL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SC\",\n          children: \"SC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ST\",\n          children: \"ST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Courses (up to 3):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-selection\",\n        children: coursesList.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `course-box ${selectedCourses.includes(course) ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: course,\n            checked: selectedCourses.includes(course),\n            onChange: handleCourseChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), course]\n        }, course, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Your Rank:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: rank,\n        onChange: e => setRank(e.target.value),\n        placeholder: \"Enter your rank\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search Colleges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), colleges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Colleges:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: colleges.map((college, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: college.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [college.courseName, \": Opening Rank: \", college.rankData.openingRank, \", Closing Rank: \", college.rankData.closingRank]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(RankForm, \"V7ROl+vcS8/KG9sVGTnQ/hbM2No=\");\n_c = RankForm;\nexport default RankForm;\nvar _c;\n$RefreshReg$(_c, \"RankForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","indianStates","coursesList","RankForm","_s","examType","setExamType","state","setState","gender","setGender","category","setCategory","rank","setRank","selectedCourses","setSelectedCourses","colleges","setColleges","fetchColleges","e","preventDefault","length","alert","response","get","params","Number","courses","join","data","error","_error$response","_error$response$data","console","message","handleCourseChange","value","target","includes","filter","course","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","className","map","type","checked","placeholder","required","college","index","name","courseName","rankData","openingRank","closingRank","_c","$RefreshReg$"],"sources":["C:/Users/manna/OneDrive/Desktop/rankinsight/client/src/components/RankForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './RankForm.css'; \r\n\r\nconst indianStates = [\r\n    \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",\r\n    \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\",\r\n    \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\",\r\n    \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\",\r\n    \"Rajasthan\", \"Tamil Nadu\", \"Telangana\", \"Tripura\",\r\n    \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"\r\n];\r\n\r\nconst coursesList = [\r\n   \"Aerospace Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Aerospace Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Artificial Intelligence (4 Years, Bachelor of Technology)\",\r\n    \"Artificial Intelligence and Data Analytics (4 Years, Bachelor of Technology)\",\r\n    \"Artificial Intelligence and Data Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Biochemical Engineering with M.Tech. in Biochemical Engineering and Biotechnology (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Bioengineering with M.Tech in Biomedical Technology (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Biological Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Biological Science (4 Years, Bachelor of Science)\",\r\n    \"Biotechnology and Biochemical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Biotechnology and Bioinformatics (4 Years, Bachelor of Technology)\",\r\n    \"Chemical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Chemical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Chemical Science and Technology (4 Years, Bachelor of Technology)\",\r\n    \"Ceramic Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Ceramic Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Civil Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Civil Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Computer Science and Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Computer Science and Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Data Science and Artificial Intelligence (4 Years, Bachelor of Technology)\",\r\n    \"Data Science and Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Electrical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Electrical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Electronics and Communication Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Electronics and Electrical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Engineering Design (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Engineering Physics (4 Years, Bachelor of Technology)\",\r\n    \"Environmental Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Environmental Science and Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Industrial Chemistry (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Materials Science and Technology (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Mathematics and Computing (4 Years, Bachelor of Technology)\",\r\n    \"Mathematics and Computing (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Mechanical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Mechanical Engineering (5 Years, Bachelor and Master of Technology (Dual Degree))\",\r\n    \"Metallurgical and Materials Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Mining Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Mining Machinery Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Naval Architecture and Ocean Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Physics (4 Years, Bachelor of Science)\",\r\n    \"Physics (5 Years, Bachelor of Science and Master of Science (Dual Degree))\",\r\n    \"Production and Industrial Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Statistics and Data Science (4 Years, Bachelor of Science)\",\r\n    \"Space Sciences and Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Textile Technology (4 Years, Bachelor of Technology)\",\r\n    \"Geological Technology (5 Years, Integrated Master of Technology)\",\r\n    \"Geophysical Technology (5 Years, Integrated Master of Technology)\",\r\n    \"Applied Geology (5 Years, Integrated Master of Technology)\",\r\n    \"Applied Geophysics (5 Years, Integrated Master of Technology)\",\r\n    \"Chemical and Biochemical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Pharmaceutical Engineering & Technology (4 Years, Bachelor of Technology)\",\r\n    \"Interdisciplinary Sciences (5 Years, Bachelor of Science and Master of Science (Dual Degree))\",\r\n    \"Biomedical Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Bio Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Energy Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Industrial Engineering and Operations Research (4 Years, Bachelor of Technology)\",\r\n    \"Mechatronics Engineering (4 Years, Bachelor of Technology)\",\r\n    \"Chemical Science and Technology (4 Years, Bachelor of Technology)\",\r\n    \"Mathematics & Computing (5 Years, Bachelor of Science and Master of Science (Dual Degree))\",\r\n    \"Biosciences and Bioengineering (4 Years, Bachelor of Technology)\",\r\n    \"Chemical Sciences (5 Years, Bachelor of Science and Master of Science (Dual Degree))\",\r\n    \"Engineering and Computational Mechanics (4 Years, Bachelor of Technology)\"\r\n];\r\n\r\nconst RankForm = () => {\r\n    const [examType, setExamType] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [rank, setRank] = useState(\"\");\r\n    const [selectedCourses, setSelectedCourses] = useState([]);\r\n    const [colleges, setColleges] = useState([]);\r\n\r\n    const fetchColleges = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!gender || !category || !rank || selectedCourses.length === 0) {\r\n            alert(\"Please select all fields and at least one course.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/colleges/search`,\r\n                {\r\n                    params: {\r\n                        gender,\r\n                        category,\r\n                        rank: Number(rank),\r\n                        courses: selectedCourses.join(\",\")\r\n                    }\r\n                }\r\n            );\r\n            setColleges(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n            alert(error.response?.data?.message || \"Failed to fetch data. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleCourseChange = (e) => {\r\n        const value = e.target.value;\r\n        if (selectedCourses.includes(value)) {\r\n            setSelectedCourses(selectedCourses.filter(course => course !== value));\r\n        } else if (selectedCourses.length < 3) {\r\n            setSelectedCourses([...selectedCourses, value]);\r\n        } else {\r\n            alert(\"You can select a maximum of 3 courses.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find Your College</h2>\r\n            <form onSubmit={fetchColleges}>\r\n                <label>Exam Type:</label>\r\n                <select value={examType} onChange={(e) => setExamType(e.target.value)}>\r\n                    <option value=\"\">Select Exam</option>\r\n                    <option value=\"jeeAdvanced\">JEE Advanced</option>\r\n                </select>\r\n\r\n\r\n                <label>Gender:</label>\r\n                <select value={gender} onChange={(e) => setGender(e.target.value)}>\r\n                    <option value=\"\">Select Gender</option>\r\n                    <option value=\"GENDER_NEUTRAL\">Gender-Neutral</option>\r\n                    <option value=\"FEMALE_ONLY\">Female</option>\r\n                </select>\r\n\r\n                <label>Category:</label>\r\n                <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                    <option value=\"\">Select Category</option>\r\n                    <option value=\"OPEN\">OPEN</option>\r\n                    <option value=\"EWS\">EWS</option>\r\n                    <option value=\"OBC-NCL\">OBC-NCL</option>\r\n                    <option value=\"SC\">SC</option>\r\n                    <option value=\"ST\">ST</option>\r\n                </select>\r\n\r\n                <label>Select Courses (up to 3):</label>\r\n                <div className=\"course-selection\">\r\n                    {coursesList.map((course) => (\r\n                        <div key={course} className={`course-box ${selectedCourses.includes(course) ? 'selected' : ''}`}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value={course}\r\n                                checked={selectedCourses.includes(course)}\r\n                                onChange={handleCourseChange}\r\n                            />\r\n                            {course}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <label>Enter Your Rank:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={rank}\r\n                    onChange={(e) => setRank(e.target.value)}\r\n                    placeholder=\"Enter your rank\"\r\n                    required\r\n                />\r\n\r\n                <button type=\"submit\">Search Colleges</button>\r\n            </form>\r\n\r\n            {colleges.length > 0 && (\r\n                <div>\r\n                    <h3>Available Colleges:</h3>\r\n                    <ul>\r\n                        {colleges.map((college, index) => (\r\n                            <li key={index}>\r\n                                <strong>{college.name}</strong>\r\n                                <ul>\r\n                                    <li>\r\n                                        {college.courseName}: Opening Rank: {college.rankData.openingRank}, Closing Rank: {college.rankData.closingRank}\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RankForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}